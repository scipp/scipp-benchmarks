{"project": "Scipp", "project_url": "https://scipp.github.io/", "show_commit_url": "http://github.com/scipp/scipp/commit/", "hash_length": 8, "revision_to_hash": {"124": "89ea7a88d8339e2a95c1fb817a173614f210db1e", "320": "4c2e152203571fdb3bbfe67a5fe9fe176c0c7574", "1625": "ca957f2beeb492778028a79d1f56cc332d82e835", "3242": "ba05fb04aa4137829f033ba12a5eb80e57653b19", "3390": "4623f7631c3a727e1b26dceaaa461b8d7db565f2", "3395": "875345701a235cd51b0694725a77015f6157f108", "4861": "5a55df58a7a8dba7feb1c195297aa97712b5bd15", "5946": "dbb3ac60a2f3e773531e145c363f62a793cd7d63", "5956": "d21d44822c82f96f6f9532bd2ede559e0733000a", "7040": "e011204ccf98ed23f45f9ccb1df068cd39bf5826", "9516": "5f1d9010f54bd57bc9c566607167c5d5393327de", "10547": "006091fcd68246d8a85e5295730745cd3f842663", "11228": "75d2704c810cf9b4f3aea5e3940d67fc022188d8", "11647": "bf4ee0886a17b8aaf0df858de5b8ea10ff0a48c3", "12076": "9a3840d0209a02e5d7ab900637320ea5172260e9", "12664": "80d2b7810b9824459ab08fe88cc589609ee7eda0", "12877": "7d009dfe793203147d8f0b47eb98b8b81972f5e8", "13386": "b5c1c33773ceca0c87902c6d2df7dcd14c8b2982", "13390": "55b01df9a62f373b3873e3f479fbcaff49839ed8", "13417": "d36e2ee982abc3ccb002ad8196f030cf88abebe4", "13447": "163c3c663149e9af23a8cff9d50b37f79aa92f84", "13449": "7e607e1cb2126ba5c7f411e72366c08f6e34d71b", "13466": "ae5db1fe1cdbe05f79dbcc5f7faa0648fdaa0da0", "13662": "06545cb299ea0f75cdb6d773850dcdc9538b7d7f", "13699": "7d220ecacbb113036190133b8b7c6d77ee2a83ef", "13704": "7a54b29e0122b9fe3550cd36e779bcda0b39cee1", "13711": "3d89e14e97f2c0a345261de30e8550e0d4b14edf", "13721": "811aa16fc479e32e7e846bdd68262ef8a2576a11", "13723": "a0d83e64c598d577711977c2665d60344eb5abba", "13745": "6e27f503e1915bbb3b59a2e0a33f9a6cc26336f8", "13773": "0e4877ab4aa9e2ba0d1010d3819efb11dc05dc23", "13786": "35ad9bb902a2fe4172fdfa256a48a67578b5cc4a", "13797": "67cb47c2e5f3dff72663ef82ae0ab6172da4d119", "13804": "1ccd5865ead57731d9db76d85d11b95a3ccf4020", "13814": "37819e456aec11477b8a65411a8706ab04f4274c", "13817": "8dcd939b7ac131470e9d54cfa2ac17e3ee803ba6", "13833": "517a2c2fd0e552c6ebf18afa0460a6aaade8aada", "13834": "decbb1d4cffce251008358fca96d31442dc94749", "13836": "dcafd59f1ee00966a470f9511e4f5f8a830904c5", "13843": "a08ae0cce48f0069c1fbfaf649fc8a4d5f1db1da", "13844": "6b8049af793385383ef8f28b5c1b215d76423eaa", "13862": "f97b0621c0dead5084b563b1e76f53f658c2a86c", "13865": "a66f4a03d340990543114f77998c68ecc6fab83e", "13869": "861a95765fbb5a1adc8fd1fa1dbab5375eddee5e", "13870": "3d94c1c9da9f6e6860f862b8ae78c3b138672e16", "13896": "56913315866b77f06e3bb021d9611723c59ad373", "13911": "f14f56ed19cccb4162d55b1123df7225eeedb395", "13915": "e08aeaa2c09fb58c94eb3399bc2f8b414dd1ff09", "13938": "ab235f2f6e1c6ca21dbfb0fd00e5e1e1ed22f5c1", "13945": "21643e72ef353355063cd7946e0f4e7ed7cd0fbd", "13976": "3b03f53b1a9d4d8ea62d938667cbfed2fe87768a", "13990": "e7b0d7de23bbba6d9c8dc2b62637ff10e920331b", "13991": "d1f2497971b9fb706fbfcf1101ed07fea6a230ea", "14004": "d7520ca4c9e6cb3ebf9d6dfe98195dadcab60ed5", "14010": "02df6a2bd4b3af06ce46345cd00c1685f52448d6", "14029": "f323f55c04a2a94055274530992f72bd54f51cf1", "14062": "5200ea643f263c20ccf387b48b815f50a4742bf9", "14063": "b1c018794eeaa467235c38346c2600b6e82fd2bb", "14076": "696dac142fa923e89233c21ca15e51b53a0719ff", "14086": "24e11668e036549bbff5e0140a42b830a6dcccd1", "14090": "7cc11484f677a2970b9bef1131ecd2aa52992690", "14094": "76284fded092c931f293c6e29ddd64a0d984d098", "14096": "db4424d5656a7c5cb817bd1d6e0aace159305f21", "14097": "c7ee1a41f3788ccce28a0bee5613b956ff893b14", "14098": "34fa0e2ac8ab0f45ad8324f755e3239332faef26", "14104": "1118263b1fe94cd6ffa58f968853b7823769491b", "14119": "423f5607d7dd2c6e97bb1f7a29e90c0c9b17f79b", "14123": "6d4191637e0c771508ecef586f3c45e1188cc787", "14131": "428d67bb12d5f03917797f7aa0c5782e39cbd8b0", "14135": "13b45a9af3ad59f8ff210c4866b3163a130b0edb", "14139": "0f804a128b0ed2cf0ca4f3986d339f2ce1d254c2", "14207": "3345a29376d19cadf29e4443a112a25d4f22b143", "14247": "82014afe2e02f10ed67990517a6780694af455c1", "14252": "b6589e0c99361a4d75754beb41d046ab0327961d", "14262": "2908838291f04770b95162bc6816fd77e8b74fd1", "14268": "d08d746463908706ef35b75617c618017a7830a1", "14297": "18287cc718b38f8668a39fc9546e9528aa9b8b20", "14298": "652b9613e87d0647e04f85fc1e82bef3c7d1bb76", "14356": "5ec6563dd7d9cf45d7de26606dc7ae480babe7c1", "14358": "bc789b1bb884294eaadfe2d1cf093f9ddbb565f3", "14373": "93c4aa21f15b7019be99e430c123eb82245ef030", "14426": "ff69aec1f31f7d404c3172c149158d9703174fee", "14465": "2a22266b00714ec72ee57978e3e3527fc5a96bb7", "14471": "7547149ef673b267d48d421d21b886cc1427e7ae", "14476": "d67c90344c925913863c6bd624e33e725f62fc5b", "14531": "5bb0ab0c56c76746018a20762a2dd6f200934379", "14535": "a26b9f4cf3b6a236d79251a5c9f8e64b482cffbd", "14547": "adf6fa00d3cc000689b262024b26052f306d14d3", "14554": "337b2ed42506bd9ce172ade5f1422d3f38cde5c6", "14555": "fd6bf790e214eb6b3313b4e99d316af4cc95d761", "14561": "1f9ab1d32142fa9fbe9f9002139b1b12344a5931", "14576": "28705a207f1e2f41d95fdd532cc0c27ce9b26f5c", "14581": "6a8b2359709b0ad44342db55c57c7d7e03d705c8", "14614": "8fcc581773a5bd0d8609b2f01f27ed9f4e6e1ff6", "14615": "fa281eddf8c750bf4a0946a4f5e0a007c12e89a6", "14678": "69eafe0fcdee49b1d75bbb19d498eae133d95a02", "14701": "0160f5cdd6cc3b8dc2c92909d3731313fa771f40", "14713": "68baa449cf7916b7cce16d190908e590c3e31997", "14715": "0396742017c690bfb8700638292f4c8129796f98", "14728": "ca2872b343161603f88c6d2a37da5bc24178d8e1", "14732": "4fd38aa95ca23e5929344aba008f3a3f01ff74b5", "14741": "f560bf26ede6481474e6c3eeacd10f5913977b03", "14744": "78d5357099ecdd18186886aefdb68291de87665c", "14749": "4db4e42ecacb9462a55d868a56ee8144b82b38f3", "14775": "2a3daa6f5c7b0a8091b15a8f5f32edc17528e64f", "14788": "880a3dd57e41da72e5a645fdd1fa1c0675de6b21", "14819": "2a3d18c379e138ccf7b3bff298097a52cad6156a", "14823": "c830fd6b44341d803d3e98d9eb513260f02b9910", "14825": "7efd221dc0f96e0f2f9b3e116f40423ac43c2486", "14829": "341fbe9980780284ba4cba3aeeada6bb35c78189", "14848": "2bafe5477fad49988e6b011148ebe0c5d632257e", "14851": "f67e7f62de396ee3c74a1d60522ef6fd66c98475", "14902": "1910638b9207dbb052be1915c1cf1b8584b90bba", "14923": "ed18d03a59c59b25c7bd463d94907668c61d5941", "14939": "f8b64dfd9db723ade34379c21f0efc8080da2a56", "14946": "fae45a12b26c1b29e58e8fd62fd996baabf5323a", "14965": "7420920f109c62c7260b72835273da08003c7e49", "14968": "182810c475517214b8d45d0f7db51c7ce57e1687", "14969": "0b63b9d945544d8c2511a0ce97564aa886551138", "14972": "9261b54be8d3adb4a1d0fd38a259a80888df29f4", "14974": "0ae41e00db459671fcf0eac52706d5f7ecac1185", "14978": "3e0928aca128a68c372ae6c946271d46b0c229eb", "14983": "3eac5bb97f4b0d59a928e56f4df54ef6184bd500", "14987": "5f85c0c50e0bd9b24450cf577cb9fdd1ae7a0167", "14999": "3f1933bb1aa683046e33457a5cc0bfb2f23690a9", "15010": "dd2cfb69a6530a3acbc23b4e9032e2eaade3e222", "15021": "e7b7cce7499615994a177c2a622dc8514c9a2cbe", "15046": "d21aa78ad1f8e8d7c2e191a7ce06ae77b81d6d52", "15052": "74af9cd66dd51b0183c2db7f4dfd5548959818a7", "15320": "8a97450e5090131ac324af9025d8e4efd3c25ca6", "15328": "6bdd191d4b23a80761f4cc9135210c25029dca05", "15332": "4013fd65db9e0b099d64b8321e4973939e2013c3", "15334": "be0a9558f26cd64f2854a5a3cbfbfd3968fafbd7", "15335": "a46675680d6aa08e16a22c548006c5d2cd91c4ac", "15336": "75dfd89b1c13ebce045e25db34efc2b6408aa5c2", "15358": "c547431bc5abe8381afc0c72279c3fb15d03893a", "15366": "b6f624c530c3166f9bf2c241c071b62d30d11f72", "15377": "0200be506b5e4fcc6693c78b0023c700ab40da9c", "15383": "3350ab74c10109375c9c4b5d069edd096c6e8396", "15384": "0e8d423183faec8c8a6043df519354ec70358734", "15387": "30452b215fd1191005de4445355fcaa9d72f86c4", "15399": "8a1ed50da5017e8320f9d9c415185a099eb4c44a", "15413": "b3121dd82a2e57bcbcb1386801b547b4682e064e", "15420": "0bd6ff0b9df1ee3e920999e94ac48c454da8e07a", "15425": "6f36323d21dc045a7ad745b8da9ead66f1a0bb98", "15428": "d71285a38e194f4753dff9581dbda550524fd60c", "15435": "8eff0d4b97e2308a951b8a4fb996d2811849c35f", "15441": "27e2480f833c15c2875ce2835c40580103c2eae2", "15447": "27d2c62024960357e37e0f96eba2542e3c3e0350", "15448": "cd5a83e4b58cc98871c001b1d9d5eb4d4c504fee", "15451": "b4f0c2d4c0bb16279d78ba9eabdcf7a4226c0b75", "15492": "f5cc733f73209c67b2a7ed4ef262cb302f2caa85", "15529": "a26469c0f8eb9e6ea7ebf5470ed7809dbd800b54", "15539": "0153d721daaa69c0479c2fadae076adfb6875b49", "15596": "8f429b999a57814bc9d234a95b476743164fa3fc", "15607": "73ebfb071bf2c6461523e7b9b812c3593ce046f0", "15617": "4fc4bb5c32c4fda1c259f76a571da374bfb53fdf", "15618": "b7a291193f172f341e378fb7fa027e4e2ab542fe", "15622": "332d5617d8c53041e153da36466e076c879d9268", "15624": "c04d4876dbc60767c20d11d1ff310270ebf587ed", "15632": "9e5bb764aa2696544a39a783f4dfe645bf15f0ae", "15651": "7f617c04e659625ca86c25b135147f109de2ecc2", "15673": "f305237b3949caffa5f400bb083bea9e2e8d2381", "15692": "7bc56d633763247d6a9729958c6e5d62d8f15d27", "15697": "26648fdcda49b21a7aacdafd58625fab7ee3403b", "15700": "43ece87c963f97d77485ad00a7c9a491a69f6e31", "15748": "c5ff0710696e43cb25b993a36cf0bc3f0f7ddf69", "15752": "45f808a5cc8b5451639c0d1d8fa3548303eff854", "15765": "f74a5589c02a5c049150b96797b5b5b738734be6", "15766": "4aa2ee664f20bbf9979f8cc88bc070fd892e4a9a", "15775": "aa0565dcb918f1b807ac877caba9ae32a90aeb7c", "15782": "847788f7bf835db8b4de06ff35793f0dd86da9f6", "15816": "59513962e8ae1ffdac1e48467dfc71bc20bf05cf", "15852": "266cd915957728ed0e47bb3d659ff410dd17b2d9", "15856": "1997480988124184b75150a2422d44d12944de45", "15867": "8711132523bbcdfdfab2c7f988e296a42dad042c", "15874": "3d821c1ee2b622a92d2cbf1cfea1e77c47851597", "15918": "e13ea7f3d9cf9b6570077e66c7ce1c19c92424b9", "15925": "a2470c42104a7c63743c643e6e37a9ea36418d06", "15928": "84ae23a23c3ef997975d07f88b674ce3fa0bbd39", "15929": "8b20498edfd2aab9bea1d28567c589610298e113", "15931": "49f2f80ac82ec234ec0b8b67e58c041fe902dccd", "15933": "4f6b6ef8dc464b991cac37cf61335e267b8bff8c", "15960": "df7cf6a0665337968f9d60a9ccae4384ed9a52a2", "15965": "ed526278f3753832e2ea86bf4cbc63782c450412", "15966": "14fda01728871334e714b745ff3bc9b132d56154", "15967": "83f8e4330586fffe7a7c19327c9fd074a61f11d3", "15972": "8307ef3a5d77402997211cf74187ccda46ba71e5", "15979": "1fa2ecfd519e762f999df4a312fb4773b4fb723e", "16004": "f408a6d2e8763a5b00d554a2aaf56dd0a28c3ad2", "16008": "372492bbd2bf0c1ea119c26835c750cb15d43a6c", "16011": "587b8c2f5248fa13f93e086eef179cdfe22b313c", "16026": "3a93fa5573a60aed52d3e58fc73258fef55b3b98", "16046": "d8cd5d183488d9f8efcb077d712091837b172546", "16050": "5297b1c59b11326c91c38f9e8ce82c86022c9e25", "16074": "71303175231bb03d9908925503f7d8b6b7c909fa", "16083": "94c59fdb067330019a773e5590e673fe55810d78", "16086": "fb51ef84758a1df32943132067808eac0a53d899", "16088": "472db8c35c47c7f122265d88c7149cceebb551ac", "16090": "774172e9dc494f518729820078c436f1bcd59c0b", "16100": "b826e2b3aee0baacc5ebe75a843d40dbed727c64", "16570": "5178fefc17d54f29acc9b0c3796a841bba935e22", "16896": "09000bc30b18d9f60cd2c23c6abc45eae4096c8a", "16900": "660eb59c7f8c010193803edb3123834cf65ace56", "16915": "7b9a49fee9e28848ab7b33550b9384c9315d1d68", "17066": "4697a7c3c00d105010f6e6eb0fb40811f1ac15e2", "17317": "669d5b22e40d8da3be88bd949129a34f41d76c06", "17318": "fe70ad4ce4758ea995910f0a6effba2591f53f99", "17335": "6f0dadff5ce1068a194e9c5803cc54b96a657700", "17406": "00ab68928429323f9cb51908c0de609a9b81917f", "17415": "6051956e57ab10f6e128aab0d8edb03770cedab7", "17417": "8d1839eb891e10f2689f5884b643c9ddc54f9667", "17441": "444448d5085bef4ae633e7fdcfd0cc9235497031", "17450": "9b7661ec6389954bafd6c9629dfb708a87cb2e4c", "17461": "9255eb8821cea9969e07bcf81f0decf4da136a29", "17480": "30c1d74890b6dd35251aa00ecf79b39b32383f13", "17481": "d489cb7417026f2a41cc7e977702cde0497726f5", "17599": "0f2ae54be9113594dfa10e2ad557b76de20371d3", "17649": "d498bd1be4b0b6be4159636ddc2ceff45cd238c2", "17682": "04ab9c76291976c934fe82173c400294fb36b116", "17697": "3643578bfa9610a68bd4f631830631a1f1db812a", "17699": "6d4dfdc874ae6b870b07a2fa54134729328a6830", "17725": "6c77aad9c7cddf60eed04f0186f8c4995a09daf3", "17788": "bdff46157f6e374ac564053feeb75e38b23918e0", "17791": "8bfbc7e362caf14c3d9268b6efcf6894254727f2", "17809": "73b85fbcbe8ded88eec2539887e111c10a18160e", "17822": "3abb2e5a2ec6eae2231a10fb4c0e47888defdb55", "17849": "b2bd70cc70787cddb599ed8f3a7d084b317e6dac", "17896": "3f3d037e39af755233ce29cedcc38cab6eff6758", "18042": "7dd84949c4a12327dee774b5ae5d372dbc54e0ab", "18180": "14e6ac90fb93767ffc1d6e9fb87026461626d44b", "18226": "1c3819022f7b633deee7130865ccf10bc0f7d65a", "18238": "6f63b12c28681b74fb56fdbeec4bbce5c34549f7", "18304": "d2b38424706fdab67925877fd46456162e72a699", "18338": "bc08cac4f2a464e30e1239d67b08542011304d34", "18382": "798920807718904290a3e9199f4d0533effe2b4a", "18398": "687a27d0c3cb45a389bc711d47bc510feef40dd4", "18434": "62778d23843b4f5cf1fd7e5e00ddfc201eea721a", "18468": "8512e7196493721e63a6e091181d436e52371ec8", "18473": "4befee94d871833bfca1c123e6001289b8945d80", "18502": "35590fb9aaba582bcd9e53639a67817a778f1c21", "18520": "457abf4a53bc83076323557abb78d66218e49c7d", "18525": "941b52abe8ed0de48eccfce9fbc0eeae8434e12e", "18529": "dc10aa71df7f6368ec149c612f88afa1c38afbed", "18552": "5633d57cc0febbc4f6a951b13f0741dc5a1a83f9", "18570": "6aae0b5b3e9d349904ef0e4dbd396c1f0101163e", "18589": "606af7647f7dcb08535de0c4844c15e4243e888e", "18603": "46014962bae23a427d34da77a936b1dbd0c99c05", "18610": "6356f6caa9269f7fac95183147bde3c2987b8bac", "18626": "ecc2b8d4508bb5abf650ae8ed76383a0edb1aec5", "18642": "ba1cfae1257481bf46ac24073ca625f071cfe91d", "18654": "c7199f3e3c5f57a917e4ae5865ab4b1a2dd348af", "18674": "d0abdce2f05e607cf93a17154ace7c9e1c566252", "18703": "beecf3fb2d39dc2943fdba898beaae31a0c77139", "18732": "4668bdb8f6872788cca5d43d684bd6d37faf2dd9", "18770": "1badd23b5458bd6d75b251fedf14cb130173de65", "18775": "ce6d555ed7211c5149b8864c1b86f9b405b526eb", "18781": "b32816d571533367fcec2a6baa2f1da82e87c6ac", "18794": "b709cdb4192c839a3541b2d24175495cdf86bef4", "18803": "adec01de37d84babe0e8cf2c4107f8c8ecfe0d1c", "18812": "d5ae6ec5ceb4b20ba2c73586d723393b1694cda7", "18818": "ba843122f36f3ef049a40f790beb64263984ccd2", "18820": "9316700191c5065aff3d1b73e3252fea99b21b0a", "18831": "d02a78e40d95c789b3ca45bbd2aff44b13908849", "18863": "678cb458978b5eec9f04afb16355d3bac8577c92", "18900": "e0ae0b50412f4ce001d464bfbc127fbe7c809829", "18933": "ccd83203657b521c22915208134c75ec88a81cf3", "18935": "5d97f3834760ca595fecd5f9e6d39376c68a73c8", "18936": "d497a99480e385810975ac7c76869d475b884a43", "19017": "9619475b6805fb8930a6cd4c34130a447f71e8a6", "19102": "351eefd7c09b03991c22e175477929767caac266", "19200": "117d3eb2c68bae45b37b77977b3fc34ef149de8c", "19238": "4bd5c4c1384a15ccc65fbe10ba641e6bed76538b", "19245": "acffb90c50e09b26d564b6e69d15bafff27cfbe9", "19253": "8f0a7e7a6f81ed103566fc7dd4e0bef07adbc9e5", "19255": "db1f2b299b6b9365af926445efb47435525076de", "19261": "b44fd406303f4fe2e6a7ad387fc743c46050eb1a", "19264": "8304e4b5b40a51db87b8021c4a6777102dbdffab", "19288": "30a36def20b17d9f3bef1ae4e10822ce4d2c95cc", "19311": "5e59621da75ccf81df6d70465ebf514f466f8eca", "19403": "31a83b0e8e4b31de8d9746d7623646f841fc451e", "19410": "f99f9db457d5fd665fe34f8b100825ee967cb60e", "19415": "b7aeaf50bef5b3e5fb50dfd34691ec16f55b2ad8", "19419": "fb1481e6d14442b8d3b169c3f16c6afbab526ba5", "19431": "54cc8508f7b784ad801b030f5e71fc0b5e67c6f3", "19449": "14ea554b0259ee5598be4eccab99469db67c24d8", "19451": "227559e0140bb17e28128a0ccc874dd166355c05", "19455": "922f1d1b17187ece1850243602a2df1e6e5442a4", "19462": "9e4c6378ed92e497e4d4d2af458a07efd1612980", "19491": "58cd9734f91c1e00e978144fcd25b0aa045506ab", "19503": "7e22a5b2858739b49d85a02ba8a4be54ae37b832", "19563": "e82e076772923595f90fcc6983dadbc7985e74c3", "19572": "0525e3b9dd0cd20909a7bbb51373556b2cbb0b21", "19610": "06826569fbcbcd5991a012bab8cc5a11047db542", "19614": "a448558a7c5fdcb898b0fbc3b6518fb842f8fb07", "19625": "30d653365627d1d763201082d06bc6b6089b85ac", "19629": "3825353cbce75d870fb0cc5a0c30cac5f71abad9", "19668": "4e54974c75e3cf0da075e82b6995d080125be4bc", "19694": "c169fcb4e7787d5c1e5c5618d19774cb0d3e073f", "19717": "8926f17e545fac331c475c1b80cfc3a901a8f2eb", "19730": "753bbaf1271a4e99da5f8e0710197dd600ba1a3a", "19732": "88661b110ba91775f68b791442998b745d621b42", "19749": "81e40bf2b891bca2d6d81957016e84e2d4e25735", "19753": "057ec4ec59bc80716a85c06b6084af35fcd1d953", "19756": "75308cc6626dcc6f4eb91098e8099d9eb798514a", "19762": "7d0cce6be6a4c1bbf2748c1c9b764909207b0c4a", "19768": "79c698db3bb50212551985c1047dc56387afa082", "19770": "2bc44c832daf1a1362915e02ae740bc8655dda51", "19773": "54df1b8fc627f550cce7a0495d7ebed3ee7586fb", "19781": "c193523b41952a7d4a452b40727d0c5c83b4013a", "19785": "d623bf292ae9a8eed5ddbfa2a955198b80911b69", "19791": "36c6fb8617f30632666cd417d2f4255b6da199bc", "19797": "800221a72c529c419b385f47bc018fac629ef23a", "19825": "e2736c5ade4cebf11d5bc3bb3ae268ce4ae506c5", "19832": "c2083b3ac19f7563ece60373b60f514c8775b251", "19835": "8b2d2d36c93d5a61799b466768f708c36742adec", "19838": "bdbf5d133efc3adc28c212874934d70ec6b59513", "19842": "b73b276e652c35bdd5e7cca1dad01aa680cc60a8", "19843": "3e18074ea6a7216b9bf6d1716b2eb4470968a278", "19847": "ce9701910f4607235e9f78e7d0f9c1113df3e10a", "19854": "7b209d6a0282103c7b641cf1f1d24fdb660a53b4", "19867": "28b8a6aacf13b075635e5ef2e3900d4e19054642", "19874": "1e21ff8ecec15752dbd080c78e3c4a34aea88c64", "19896": "015f4f573a0ab7e155a586bdcec4573ee2592122", "19909": "fe2dbc82b698a919a1865261f6910769480ecd0b", "19918": "a577ef195e2560d1e800717e0ffcf9a4dfb10f21", "19926": "8de23d2dabfe79fb70fc26ff7387e34fc4f6654c", "19928": "8360cafe64618a45ad3026e03f2fe5087125b027", "19930": "c339a14b803c881863c6c8c0e84915f8450f32e0", "19937": "ac0923165eb814b8096f84636a7ab9df8be33ec6", "19949": "0adc7b97fd9a553492008efe5e92980267378263", "19953": "47b2623d37ec424c86ffb1bc78beb4248a19c3c6", "19957": "0687af61c3d5d08424c073d2d689b0a67aac94de", "19972": "2a64d1dc7fb0b930e91f70c43546031ca717ec1f", "19973": "40fe10cc3798842594a95777113e0775ee003559"}, "revision_to_date": {"124": 1528781367000, "320": 1536217010000, "1625": 1553685126000, "3242": 1568121579000, "3390": 1568800105000, "3395": 1568883142000, "4861": 1576747606000, "5946": 1585226806000, "5956": 1585302237000, "7040": 1594388132000, "9516": 1611812495000, "10547": 1616597571000, "11228": 1619006595000, "11647": 1620795363000, "12076": 1622623406000, "12664": 1625745990000, "12877": 1627897881000, "13386": 1631620211000, "13390": 1631701741000, "13417": 1631882158000, "13447": 1632381161000, "13449": 1632390210000, "13466": 1632764162000, "13662": 1634287482000, "13699": 1634631086000, "13704": 1634723919000, "13711": 1634730485000, "13721": 1634736771000, "13723": 1634739327000, "13745": 1634787861000, "13773": 1634881247000, "13786": 1634898417000, "13797": 1634910524000, "13804": 1634913509000, "13814": 1635149169000, "13817": 1635157324000, "13833": 1635235109000, "13834": 1635240014000, "13836": 1635253737000, "13843": 1635266872000, "13844": 1635309212000, "13862": 1635336087000, "13865": 1635343616000, "13869": 1635412101000, "13870": 1635419761000, "13896": 1635758364000, "13911": 1635774467000, "13915": 1635836519000, "13938": 1635928733000, "13945": 1635939642000, "13976": 1636002496000, "13990": 1636037863000, "13991": 1636084911000, "14004": 1636103985000, "14010": 1636110670000, "14029": 1636359403000, "14062": 1636451876000, "14063": 1636454311000, "14076": 1636467533000, "14086": 1636521105000, "14090": 1636536512000, "14094": 1636539648000, "14096": 1636551535000, "14097": 1636556115000, "14098": 1636611392000, "14104": 1636623033000, "14119": 1636635349000, "14123": 1636641311000, "14131": 1636695324000, "14135": 1636708610000, "14139": 1636717130000, "14207": 1637071035000, "14247": 1637135329000, "14252": 1637155763000, "14262": 1637561949000, "14268": 1637574832000, "14297": 1637738227000, "14298": 1637744114000, "14356": 1637919368000, "14358": 1637923009000, "14373": 1638159174000, "14426": 1638442153000, "14465": 1638528234000, "14471": 1638791815000, "14476": 1638852447000, "14531": 1638863959000, "14535": 1638868773000, "14547": 1638884209000, "14554": 1638944253000, "14555": 1638951832000, "14561": 1638971614000, "14576": 1639028856000, "14581": 1639036630000, "14614": 1639123738000, "14615": 1639128080000, "14678": 1639557577000, "14701": 1639642355000, "14713": 1639661325000, "14715": 1639721029000, "14728": 1639735805000, "14732": 1639746862000, "14741": 1641189380000, "14744": 1641192752000, "14749": 1641204095000, "14775": 1641298481000, "14788": 1641386384000, "14819": 1641397404000, "14823": 1641450626000, "14825": 1641464960000, "14829": 1641543195000, "14848": 1641563728000, "14851": 1641802002000, "14902": 1641894364000, "14923": 1641908380000, "14939": 1641979969000, "14946": 1641989511000, "14965": 1642005564000, "14968": 1642053783000, "14969": 1642055178000, "14972": 1642083192000, "14974": 1642085380000, "14978": 1642138125000, "14983": 1642416157000, "14987": 1642572031000, "14999": 1642581122000, "15010": 1642608038000, "15021": 1642657906000, "15046": 1643019494000, "15052": 1643092417000, "15320": 1643980430000, "15328": 1644239793000, "15332": 1644332348000, "15334": 1644399287000, "15335": 1644408632000, "15336": 1644414506000, "15358": 1644487976000, "15366": 1644555392000, "15377": 1644589621000, "15383": 1644829822000, "15384": 1644843067000, "15387": 1644851384000, "15399": 1644920075000, "15413": 1644932740000, "15420": 1644936813000, "15425": 1644987344000, "15428": 1644998384000, "15435": 1645005762000, "15441": 1645013085000, "15447": 1645019662000, "15448": 1645024342000, "15451": 1645084448000, "15492": 1645695370000, "15529": 1646039690000, "15539": 1646039544000, "15596": 1646143052000, "15607": 1646149343000, "15617": 1646209236000, "15618": 1646209735000, "15622": 1646227383000, "15624": 1646231986000, "15632": 1646318443000, "15651": 1646719861000, "15673": 1646745181000, "15692": 1646811820000, "15697": 1646980014000, "15700": 1647001958000, "15748": 1647258034000, "15752": 1647262259000, "15765": 1647325432000, "15766": 1647325570000, "15775": 1647413770000, "15782": 1647495632000, "15816": 1647950904000, "15852": 1648027563000, "15856": 1648031279000, "15867": 1648136599000, "15874": 1648188147000, "15918": 1648470215000, "15925": 1648473166000, "15928": 1648527538000, "15929": 1648528703000, "15931": 1648537115000, "15933": 1648548462000, "15960": 1649243648000, "15965": 1649256619000, "15966": 1649309213000, "15967": 1649325781000, "15972": 1649335709000, "15979": 1649395273000, "16004": 1649663088000, "16008": 1649680870000, "16011": 1649767832000, "16026": 1649843045000, "16046": 1650517861000, "16050": 1650534170000, "16074": 1650879553000, "16083": 1650893089000, "16086": 1650943089000, "16088": 1650960966000, "16090": 1650962976000, "16100": 1651052845000, "16570": 1654076127000, "16896": 1658206934000, "16900": 1658221122000, "16915": 1658301487000, "17066": 1659616602000, "17317": 1661307223000, "17318": 1661311333000, "17335": 1661332238000, "17406": 1661517400000, "17415": 1661758117000, "17417": 1661766183000, "17441": 1662467948000, "17450": 1663319632000, "17461": 1664364345000, "17480": 1664536867000, "17481": 1664773836000, "17599": 1665743974000, "17649": 1666353050000, "17682": 1666781808000, "17697": 1666961919000, "17699": 1667368524000, "17725": 1668086702000, "17788": 1669369998000, "17791": 1669616608000, "17809": 1670577401000, "17822": 1670910361000, "17849": 1671723326000, "17896": 1673013176000, "18042": 1673597093000, "18180": 1674224191000, "18226": 1674723657000, "18238": 1674798691000, "18304": 1675328863000, "18338": 1676016000000, "18382": 1676623316000, "18398": 1677234161000, "18434": 1677754400000, "18468": 1678981023000, "18473": 1679057440000, "18502": 1679645858000, "18520": 1680265784000, "18525": 1680507874000, "18529": 1680592055000, "18552": 1681292665000, "18570": 1681469922000, "18589": 1682075130000, "18603": 1682585245000, "18610": 1683115345000, "18626": 1683627943000, "18642": 1684317428000, "18654": 1685086994000, "18674": 1685545922000, "18703": 1685612061000, "18732": 1686208630000, "18770": 1686813213000, "18775": 1687364084000, "18781": 1688110558000, "18794": 1688537562000, "18803": 1688629925000, "18812": 1689051131000, "18818": 1689656558000, "18820": 1691139291000, "18831": 1691745256000, "18863": 1692340612000, "18900": 1692959208000, "18933": 1693458493000, "18935": 1693804923000, "18936": 1693826318000, "19017": 1695735327000, "19102": 1697021571000, "19200": 1698913594000, "19238": 1699533855000, "19245": 1699964059000, "19253": 1700049059000, "19255": 1701160960000, "19261": 1701751495000, "19264": 1702468941000, "19288": 1702563455000, "19311": 1703056715000, "19403": 1707135014000, "19410": 1707193936000, "19415": 1708075960000, "19419": 1708318510000, "19431": 1708679495000, "19449": 1709899386000, "19451": 1710170472000, "19455": 1710947097000, "19462": 1712905161000, "19491": 1714045727000, "19503": 1714655910000, "19563": 1716814735000, "19572": 1717088351000, "19610": 1718809100000, "19614": 1719214885000, "19625": 1719407998000, "19629": 1720095030000, "19668": 1720778733000, "19694": 1722586370000, "19717": 1723197681000, "19730": 1723639863000, "19732": 1724052820000, "19749": 1724764243000, "19753": 1725267176000, "19756": 1725444687000, "19762": 1725969239000, "19768": 1726649833000, "19770": 1727157530000, "19773": 1728034849000, "19781": 1728540901000, "19785": 1728989630000, "19791": 1729853050000, "19797": 1730270621000, "19825": 1731085079000, "19832": 1731353709000, "19835": 1731404004000, "19838": 1732090560000, "19842": 1732886876000, "19843": 1733407320000, "19847": 1733818600000, "19854": 1734683684000, "19867": 1736510410000, "19874": 1737550670000, "19896": 1738240012000, "19909": 1738837688000, "19918": 1739363281000, "19926": 1740128126000, "19928": 1740470945000, "19930": 1741017014000, "19937": 1741765951000, "19949": 1742471150000, "19953": 1742501092000, "19957": 1743068642000, "19972": 1743598774000, "19973": 1744197818000}, "params": {"cpu": ["2 Core CPU"], "machine": ["cloud-container"], "os": ["Ubuntu"], "ram": ["7GB"], "python": ["3.10", "3.8", "3.9"], "num_cpu": ["2", null], "branch": ["main"]}, "graph_param_list": [{"cpu": "2 Core CPU", "machine": "cloud-container", "os": "Ubuntu", "ram": "7GB", "python": "3.8", "branch": "main", "num_cpu": null}, {"cpu": "2 Core CPU", "machine": "cloud-container", "num_cpu": "2", "os": "Ubuntu", "ram": "7GB", "python": "3.8", "branch": "main"}, {"cpu": "2 Core CPU", "machine": "cloud-container", "num_cpu": "2", "os": "Ubuntu", "ram": "7GB", "python": "3.10", "branch": "main"}, {"cpu": "2 Core CPU", "machine": "cloud-container", "num_cpu": "2", "os": "Ubuntu", "ram": "7GB", "python": "3.9", "branch": "main"}], "benchmarks": {"bin.Bin1d.time_bin_table": {"code": "class Bin1d:\n    def time_bin_table(self, nbin):\n        make_binned(self.table, edges=[self.x])\n\n    def setup(self, nbin):\n        self.table = sc.data.table_xyz(50_000_000)\n        self.x = sc.linspace(dim='x', start=0, stop=1, num=nbin + 1, unit='m')", "min_run_count": 2, "name": "bin.Bin1d.time_bin_table", "number": 0, "param_names": ["nbin"], "params": [["np.int64(1)", "np.int64(2)", "np.int64(4)", "np.int64(8)", "np.int64(16)", "np.int64(32)", "np.int64(64)", "np.int64(128)", "np.int64(256)", "np.int64(512)", "np.int64(1024)", "np.int64(2048)", "np.int64(4096)", "np.int64(8192)", "np.int64(16384)", "np.int64(32768)", "np.int64(65536)", "np.int64(131072)", "np.int64(262144)", "np.int64(524288)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "f2e8b7683e6f274b5c269ec1c7a174683ff1e5473dce21dc0d446fbd5611fa96", "warmup_time": -1}, "bin.Bin2dRebinLongDim.time_outer": {"code": "class Bin2dRebinLongDim:\n    def time_outer(self, nbin):\n        x = sc.linspace(dim='x', start=0, stop=1, num=nbin - 1, unit='m')\n        make_binned(self.da, edges=[x])\n\n    def setup(self, nbin):\n        binned = sc.data.binned_x(nevent=2 * nbin, nbin=nbin)\n        y = sc.linspace(dim='y', start=0, stop=1, num=2, unit='m')\n        self.da = make_binned(binned, edges=[y])\n        self.da_transposed = self.da.transpose().copy()", "min_run_count": 2, "name": "bin.Bin2dRebinLongDim.time_outer", "number": 0, "param_names": ["nbin"], "params": [["np.int64(1024)", "np.int64(2048)", "np.int64(4096)", "np.int64(8192)", "np.int64(16384)", "np.int64(32768)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "1db06b58771967cf21e92bf8379883351566a21bf2c9d58e770cdd72f76b0e8c", "warmup_time": -1}, "bin.Bin2dRebinLongDim.time_outer_transposed": {"code": "class Bin2dRebinLongDim:\n    def time_outer_transposed(self, nbin):\n        x = sc.linspace(dim='x', start=0, stop=1, num=nbin - 1, unit='m')\n        make_binned(self.da.transpose(), edges=[x])\n\n    def setup(self, nbin):\n        binned = sc.data.binned_x(nevent=2 * nbin, nbin=nbin)\n        y = sc.linspace(dim='y', start=0, stop=1, num=2, unit='m')\n        self.da = make_binned(binned, edges=[y])\n        self.da_transposed = self.da.transpose().copy()", "min_run_count": 2, "name": "bin.Bin2dRebinLongDim.time_outer_transposed", "number": 0, "param_names": ["nbin"], "params": [["np.int64(1024)", "np.int64(2048)", "np.int64(4096)", "np.int64(8192)", "np.int64(16384)", "np.int64(32768)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "e3ff4414681f32b14c9786f7a99dc590aef5ee4c8fa523862e0c0942729a800b", "warmup_time": -1}, "bin.Bin2dRebinLongDim.time_outer_transposed_copied": {"code": "class Bin2dRebinLongDim:\n    def time_outer_transposed_copied(self, nbin):\n        x = sc.linspace(dim='x', start=0, stop=1, num=nbin - 1, unit='m')\n        make_binned(self.da_transposed, edges=[x])\n\n    def setup(self, nbin):\n        binned = sc.data.binned_x(nevent=2 * nbin, nbin=nbin)\n        y = sc.linspace(dim='y', start=0, stop=1, num=2, unit='m')\n        self.da = make_binned(binned, edges=[y])\n        self.da_transposed = self.da.transpose().copy()", "min_run_count": 2, "name": "bin.Bin2dRebinLongDim.time_outer_transposed_copied", "number": 0, "param_names": ["nbin"], "params": [["np.int64(1024)", "np.int64(2048)", "np.int64(4096)", "np.int64(8192)", "np.int64(16384)", "np.int64(32768)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "85fba314140d0326d27e2598f5b3e5f065bb19a10e6af335f7a3cd449dd6f44e", "warmup_time": -1}, "bin.Group1d.time_group": {"code": "class Group1d:\n    def time_group(self, nevent, ngroup):\n        self.table.group(self.groups)\n\n    def setup(self, nevent, ngroup):\n        self.table = sc.data.table_xyz(nevent)\n        self.table.coords['group'] = (ngroup * self.table.coords['x']).to(dtype='int64')\n        del self.table.coords['x']\n        self.contiguous_groups = sc.arange('group', ngroup, unit='m')\n        self.groups = sc.arange('group', ngroup, unit='m')\n        self.groups.values[0] = 1\n        self.groups.values[1] = 0", "min_run_count": 2, "name": "bin.Group1d.time_group", "number": 0, "param_names": ["nevent", "ngroup"], "params": [["1000", "1000000", "10000000", "100000000"], ["np.int64(4)", "np.int64(8)", "np.int64(16)", "np.int64(32)", "np.int64(64)", "np.int64(128)", "np.int64(256)", "np.int64(512)", "np.int64(1024)", "np.int64(2048)", "np.int64(4096)", "np.int64(8192)", "np.int64(16384)", "np.int64(32768)", "np.int64(65536)", "np.int64(131072)", "np.int64(262144)", "np.int64(524288)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "92bd32fb3f82d9d30f645d952c8063a3110ad25cdc67917cd7bd37f8c1f962e6", "warmup_time": -1}, "bin.Group1d.time_group_contiguous": {"code": "class Group1d:\n    def time_group_contiguous(self, nevent, ngroup):\n        self.table.group(self.contiguous_groups)\n\n    def setup(self, nevent, ngroup):\n        self.table = sc.data.table_xyz(nevent)\n        self.table.coords['group'] = (ngroup * self.table.coords['x']).to(dtype='int64')\n        del self.table.coords['x']\n        self.contiguous_groups = sc.arange('group', ngroup, unit='m')\n        self.groups = sc.arange('group', ngroup, unit='m')\n        self.groups.values[0] = 1\n        self.groups.values[1] = 0", "min_run_count": 2, "name": "bin.Group1d.time_group_contiguous", "number": 0, "param_names": ["nevent", "ngroup"], "params": [["1000", "1000000", "10000000", "100000000"], ["np.int64(4)", "np.int64(8)", "np.int64(16)", "np.int64(32)", "np.int64(64)", "np.int64(128)", "np.int64(256)", "np.int64(512)", "np.int64(1024)", "np.int64(2048)", "np.int64(4096)", "np.int64(8192)", "np.int64(16384)", "np.int64(32768)", "np.int64(65536)", "np.int64(131072)", "np.int64(262144)", "np.int64(524288)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "6d5db53e783b888bf5ad6acebc431792b8eeb52cb8686f8043f44b0e5342a20c", "warmup_time": -1}, "binned.Binned1d.time_bins_concat": {"code": "class Binned1d:\n    def time_bins_concat(self, nevent, nbin):\n        self.da.bins.concat('x')\n\n    def setup(self, nevent, nbin):\n        self.da = sc.data.binned_x(nevent, nbin)", "min_run_count": 2, "name": "binned.Binned1d.time_bins_concat", "number": 0, "param_names": ["nevent", "nbin"], "params": [["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)", "np.int64(10000000)"], ["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "58c2343f62de1ac6146796595db09fec02bea13031193a0dc2db479eda0f2f16", "warmup_time": -1}, "binned.Binned1d.time_bins_constituents": {"code": "class Binned1d:\n    def time_bins_constituents(self, nevent, nbin):\n        self.da.bins.constituents  # noqa: B018\n\n    def setup(self, nevent, nbin):\n        self.da = sc.data.binned_x(nevent, nbin)", "min_run_count": 2, "name": "binned.Binned1d.time_bins_constituents", "number": 0, "param_names": ["nevent", "nbin"], "params": [["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)", "np.int64(10000000)"], ["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "d39fc5838a3227560b812759540cafc3cc2159247318db7c082dd78f6ebbd008", "warmup_time": -1}, "binned.Binned1d.time_bins_mean": {"code": "class Binned1d:\n    def time_bins_mean(self, nevent, nbin):\n        self.da.bins.sum()\n\n    def setup(self, nevent, nbin):\n        self.da = sc.data.binned_x(nevent, nbin)", "min_run_count": 2, "name": "binned.Binned1d.time_bins_mean", "number": 0, "param_names": ["nevent", "nbin"], "params": [["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)", "np.int64(10000000)"], ["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "a4fd83ba82fac7a334c9382b83a22ef41dfbd5af0fcc407dabcbde58e122c5e1", "warmup_time": -1}, "binned.Binned1d.time_bins_size": {"code": "class Binned1d:\n    def time_bins_size(self, nevent, nbin):\n        self.da.bins.size()\n\n    def setup(self, nevent, nbin):\n        self.da = sc.data.binned_x(nevent, nbin)", "min_run_count": 2, "name": "binned.Binned1d.time_bins_size", "number": 0, "param_names": ["nevent", "nbin"], "params": [["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)", "np.int64(10000000)"], ["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "2bb7233e85b8bd6176ab5bb5bf778a5a2cffe8744976d46fc4daa774e164676d", "warmup_time": -1}, "binned.Binned1d.time_bins_sum": {"code": "class Binned1d:\n    def time_bins_sum(self, nevent, nbin):\n        self.da.bins.sum()\n\n    def setup(self, nevent, nbin):\n        self.da = sc.data.binned_x(nevent, nbin)", "min_run_count": 2, "name": "binned.Binned1d.time_bins_sum", "number": 0, "param_names": ["nevent", "nbin"], "params": [["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)", "np.int64(10000000)"], ["np.int64(1)", "np.int64(10)", "np.int64(100)", "np.int64(1000)", "np.int64(10000)", "np.int64(100000)", "np.int64(1000000)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "3998bb34213db7e17d90d3fe088ea8ac4f40755facef0382b95bd2cac9de4822", "warmup_time": -1}, "binned.Binned2dConcat.time_bins_concat": {"code": "class Binned2dConcat:\n    def time_bins_concat(self, nbin):\n        self.da.bins.concat('x')\n\n    def setup(self, nbin):\n        nx = 100000\n        binned = sc.data.binned_x(nevent=2 * nx, nbin=nx)\n        y = sc.linspace(dim='y', start=0, stop=1, num=nbin + 1, unit='m')\n        self.da = make_binned(binned, edges=[y])", "min_run_count": 2, "name": "binned.Binned2dConcat.time_bins_concat", "number": 0, "param_names": ["nbin"], "params": [["1", "2", "4", "8", "16", "32", "64", "128"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "1fa0539c5e163c0e7bb178b1629a5be1eace65f92b465df93aec2a99b452e66b", "warmup_time": -1}, "binned.Binned2dConcatInner.time_bins_concat_long_outer": {"code": "class Binned2dConcatInner:\n    def time_bins_concat_long_outer(self, nbin):\n        self.da.bins.concat('y')\n\n    def setup(self, nbin):\n        binned = sc.data.binned_x(nevent=2 * nbin, nbin=nbin)\n        y = sc.linspace(dim='y', start=0, stop=1, num=2, unit='m')\n        self.da = make_binned(binned, edges=[y])", "min_run_count": 2, "name": "binned.Binned2dConcatInner.time_bins_concat_long_outer", "number": 0, "param_names": ["nbin"], "params": [["np.int64(1024)", "np.int64(2048)", "np.int64(4096)", "np.int64(8192)", "np.int64(16384)", "np.int64(32768)"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 300.0, "type": "time", "unit": "seconds", "version": "d8550afeba7f4310e732bc4dbac947dacaec5a77d5ea60958843557342b198b3", "warmup_time": -1}, "binned.Lookup.time_create_bool": {"code": "class Lookup:\n    def time_create_bool(self):\n        self.hist_bool.coords['x'].values[-1] *= 1.1\n        sc.lookup(self.hist_bool, 'x')\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_create_bool", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "e766436c1c68f14d3ba87fb6a6ca4560323ee5caefee4ff30f8db8b310160281", "warmup_time": -1}, "binned.Lookup.time_create_float64": {"code": "class Lookup:\n    def time_create_float64(self):\n        self.hist_float.coords['x'].values[-1] *= 1.1\n        sc.lookup(self.hist_float, 'x')\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_create_float64", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "ed7cbc11f1e0fe281eb57c30bd75d40e31b0ea293c848af513bc890b744aa953", "warmup_time": -1}, "binned.Lookup.time_create_int64": {"code": "class Lookup:\n    def time_create_int64(self):\n        self.hist_int.coords['x'].values[-1] *= 1.1\n        sc.lookup(self.hist_int, 'x')\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_create_int64", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "7163f2849424cc6f80cea8a15bfa17a37350d2c7fc3b5d8cc0942dcb883e1fe5", "warmup_time": -1}, "binned.Lookup.time_map_bool": {"code": "class Lookup:\n    def time_map_bool(self):\n        self.hist_float.coords['x'].values[-1] *= 1.1\n        sc.lookup(self.hist_bool, 'x')[self.binned_x]\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_map_bool", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "51c14006826f9428009f0dfd25371b5857cb59200690df96c0df396f0f49e8bb", "warmup_time": -1}, "binned.Lookup.time_map_float64": {"code": "class Lookup:\n    def time_map_float64(self):\n        self.hist_float.coords['x'].values[-1] *= 1.1\n        sc.lookup(self.hist_float, 'x')[self.binned_x]\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_map_float64", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "3906de9c14c5b3e2394ce462554672f756c79b80b59385824ea2dd1942465759", "warmup_time": -1}, "binned.Lookup.time_map_int64": {"code": "class Lookup:\n    def time_map_int64(self):\n        self.hist_int.coords['x'].values[-1] *= 1.1\n        sc.lookup(self.hist_int, 'x')[self.binned_x]\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_map_int64", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "53cd30b5b6bad73e6634e8f749544d147fb247936de229deb057c843c9a595cd", "warmup_time": -1}, "binned.Lookup.time_map_linspace_bool": {"code": "class Lookup:\n    def time_map_linspace_bool(self):\n        sc.lookup(self.hist_bool, 'x')[self.binned_x]\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_map_linspace_bool", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "70bc53b17408d38f971ddb654777b6555253d24148bde2b305ae0f77aface541", "warmup_time": -1}, "binned.Lookup.time_map_linspace_float64": {"code": "class Lookup:\n    def time_map_linspace_float64(self):\n        sc.lookup(self.hist_float, 'x')[self.binned_x]\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_map_linspace_float64", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "b9463acb40c7a73a8cb638cc07eacb3ba38b054d1a6f6e319065757510871fbc", "warmup_time": -1}, "binned.Lookup.time_map_linspace_int64": {"code": "class Lookup:\n    def time_map_linspace_int64(self):\n        sc.lookup(self.hist_int, 'x')[self.binned_x]\n\n    def setup(self):\n        self.binned_x = sc.data.binned_x(100_000_000, 10000).bins.coords['x']\n        x = sc.linspace(dim='x', start=0.0, stop=1.0, num=1_000_001, unit='m')\n        groups = sc.arange(dim='x', start=0, stop=1_000_000) // 1000 % 5\n        self.hist_bool = sc.DataArray(data=groups.astype('bool'), coords={'x': x})\n        self.hist_int = sc.DataArray(data=groups, coords={'x': x})\n        self.hist_float = sc.DataArray(data=groups.astype('float64'), coords={'x': x})", "min_run_count": 2, "name": "binned.Lookup.time_map_linspace_int64", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "bbc2db1dcd9c5cef065df6682e098259f307051d9412ca93edc2f32a86ecf5fd", "warmup_time": -1}, "variable.Variable.time_deep_copy": {"code": "class Variable:\n    def time_deep_copy(self):\n        self.var1.copy()\n\n    def setup(self):\n        self.var1 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])\n        self.var2 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])", "min_run_count": 2, "name": "variable.Variable.time_deep_copy", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "e8d07ae15799fc765744c9b499c153a20769e8a2e9211ba350432d54ef3f8377", "warmup_time": -1}, "variable.Variable.time_shallow_copy": {"code": "class Variable:\n    def time_shallow_copy(self):\n        self.var1.copy(deep=False)\n\n    def setup(self):\n        self.var1 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])\n        self.var2 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])", "min_run_count": 2, "name": "variable.Variable.time_shallow_copy", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "834ba6db7f3808ba6ba4c6c9675ee517874b3cede7bbc4655c0163483f650689", "warmup_time": -1}, "variable.Variable.time_variable_inplace_operation": {"code": "class Variable:\n    def time_variable_inplace_operation(self):\n        self.var1 += self.var2\n\n    def setup(self):\n        self.var1 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])\n        self.var2 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])", "min_run_count": 2, "name": "variable.Variable.time_variable_inplace_operation", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "e0a2175047c37cce1ece6d7212dc1815784c3d8c33009b768f16c9ddd57b394d", "warmup_time": -1}, "variable.Variable.time_variable_non_inplace_operation": {"code": "class Variable:\n    def time_variable_non_inplace_operation(self):\n        self.var1 + self.var2\n\n    def setup(self):\n        self.var1 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])\n        self.var2 = sc.array(dims=['x'], values=[1, 2, 3, 4, 5])", "min_run_count": 2, "name": "variable.Variable.time_variable_non_inplace_operation", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "590cde73c39ca2fc0ad1ca736a819ef4714a68013b7687dc2c390a6a2ce54af0", "warmup_time": -1}}, "machines": {"cloud-container": {"cpu": "2 Core CPU", "machine": "cloud-container", "num_cpu": "2", "os": "Ubuntu", "ram": "7GB", "version": 1}}, "tags": {"0.1": 3395, "0.10.0": 14554, "0.10.1": 14561, "0.11.0": 14969, "0.11.1": 14972, "0.12.0": 15448, "0.12.1": 15539, "0.12.2": 15622, "0.12.3": 15632, "0.12.4": 15765, "0.13.0": 15933, "0.13.1": 15966, "0.14.0": 16570, "0.14.1": 16896, "0.15.0": 16900, "0.15.1": 16915, "0.16.0": 17317, "0.16.1": 17335, "0.16.2": 17406, "0.16.3": 17415, "0.16.4": 17461, "0.17.0": 17682, "0.2": 4861, "0.3.0": 5946, "0.3.1": 5956, "0.4.0": 7040, "0.5.0": 9516, "0.6.0": 10547, "0.6.1": 11228, "0.7.0": 12076, "0.7.1": 12664, "0.7.2": 13447, "0.8.0": 13386, "0.8.1": 13390, "0.8.2": 13417, "0.8.3": 13449, "0.8.4": 13466, "0.8.5": 13662, "0.9.0": 14096, "22.11.0": 17788, "23.01.0": 18226, "23.01.1": 18238, "23.03.0": 18468, "23.03.1": 18525, "23.03.2": 18552, "23.05.0": 18674, "23.07.0": 18794, "23.08.0": 18935, "23.11.0": 19245, "23.11.1": 19264, "23.12.0": 19311, "24.02.0": 19419, "24.05.0": 19563, "24.05.1": 19572, "24.06.0": 19610, "24.08.0": 19732, "24.09.0": 19749, "24.09.1": 19753, "24.11.0": 19825, "24.11.1": 19832, "24.11.2": 19842, "25.01.0": 19874, "25.02.0": 19896, "25.03.0": 19949, "25.04.0": 19972, "dataset-v1": 124, "dataset-v2": 320, "v0.0.1": 1625, "v0.0.2": 3242, "v0.1": 3390, "prototype-user-defined-kernels": 12877, "prototype-convolutions": 11647}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}